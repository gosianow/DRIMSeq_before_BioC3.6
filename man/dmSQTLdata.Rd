% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/class_dmSQTLdata.R
\name{dmSQTLdata}
\alias{dmSQTLdata}
\alias{dmSQTLdataFromRanges}
\title{Create dmSQTLdata object}
\usage{
dmSQTLdata(counts, gene_id, feature_id, genotypes, gene_id_genotypes, snp_id,
  sample_id, BPPARAM = BiocParallel::MulticoreParam(workers = 1))

dmSQTLdataFromRanges(counts, gene_id, feature_id, gene_ranges, genotypes,
  snp_id, snp_ranges, sample_id, window = 5000,
  BPPARAM = BiocParallel::MulticoreParam(workers = 1))
}
\arguments{
\item{counts}{Numeric matrix or data frame of counts. Rows represent features, for example, exons,
  exonic bins or transcripts. Columns represent samples.}

\item{gene_id}{Vector of gene IDs corresponding to \code{counts}.}

\item{feature_id}{Vector of feature IDs corresponding to \code{counts}.}

\item{genotypes}{Numeric matrix with genotypes. Rows represent SNPs, columns represent samples. The genotype of each sample is coded in the following way: 0 for ref/ref, 1 for ref/not ref, 2 for not ref/not ref, -1 or \code{NA} for missing value.}

\item{gene_id_genotypes}{Vector of gene IDs corresponding to \code{genotypes}.}

\item{snp_id}{Vector of SNP IDs corresponding to \code{genotypes}.}

\item{sample_id}{Vector of unique sample IDs corresponding to the columns in \code{counts}.}

\item{BPPARAM}{Parallelization method used by \code{\link[BiocParallel]{bplapply}}.}

\item{gene_ranges}{\code{\linkS4class{GRanges}} object with gene location. It must contain gene names when calling names().}

\item{snp_ranges}{\code{\linkS4class{GRanges}} object with SNP location. It must contain SNP names when calling names().}

\item{window}{Size of a down and up stream window, which is defining the surrounding for a gene. Only SNPs that are located within a gene or its surrounding are considered in the sQTL analysis.}
}
\value{
Returns a \code{\linkS4class{dmSQTLdata}} object.
}
\description{
Constructor functions for a \code{\linkS4class{dmSQTLdata}} object. dmSQTLdata requires that SNPs are already matched to corresponding genes. dmSQTLdataFromRanges does the matching by assigning to a gene all the SNPs that are located in a given surrounding (\code{window}) of this gene.
}
\details{
It is quite common that sample grouping defined by some of the SNPs is identical. Compare \code{dim(genotypes)} and \code{dim(unique(genotypes))}. In our sQTL analysis, we do not repeat tests for the SNPs that define the same grouping of samples. Each grouping is tested only once. SNPs that define such unique groupings are aggregated into blocks. P-values and adjusted p-values are estimated at the block level, but the returned results are extended to a SNP level by repeating the block statistics for each SNP that belongs to a given block.
}
\examples{
#############################
### Create dmSQTLdata object
#############################

library(GenomicRanges)
library(rtracklayer)

data_dir  <- system.file("extdata", package = "DRIMSeq")


# gene_ranges with names!
gene_ranges <- import(paste0(data_dir, "/genes_subset.bed"))
names(gene_ranges) <- mcols(gene_ranges)$name

counts <- read.table(paste0(data_dir, "/TrQuantCount_CEU_subset.tsv"),
   header = TRUE, sep = "\\t", as.is = TRUE)

genotypes <- read.table(paste0(data_dir, "/genotypes_CEU_subset.tsv"),
   header = TRUE, sep = "\\t", as.is = TRUE)

# snp_ranges with names!
snp_ranges <- GRanges(Rle(genotypes$chr), IRanges(genotypes$start,
   genotypes$end))
names(snp_ranges) <- genotypes$snpId

## Check if samples in count and genotypes are in the same order
all(colnames(counts[, -(1:2)]) == colnames(genotypes[, -(1:4)]))
sample_id <- colnames(counts[, -(1:2)])


d <- dmSQTLdataFromRanges(counts = counts[, -(1:2)], gene_id = counts$geneId,
   feature_id = counts$trId, gene_ranges = gene_ranges,
   genotypes = genotypes[, -(1:4)], snp_id = genotypes$snpId,
   snp_ranges = snp_ranges, sample_id = sample_id, window = 5e3,
   BPPARAM = BiocParallel::MulticoreParam(workers = 1))

plotData(d)
}
\author{
Malgorzata Nowicka
}
\seealso{
\code{\link{data_dmSQTLdata}}, \code{\link{dmFilter}}, \code{\link{dmDispersion}}, \code{\link{dmFit}}, \code{\link{dmTest}}
}

