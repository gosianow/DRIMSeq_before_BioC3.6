% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_dmDSdispersion.R,
%   R/class_dmSQTLdispersion.R
\docType{methods}
\name{dmDispersion}
\alias{dmDispersion}
\alias{dmDispersion,dmDSdata-method}
\alias{dmDispersion,dmSQTLdata-method}
\title{Estimate the precision parameter in the Dirichlet-multinomial model}
\usage{
dmDispersion(x, ...)

\S4method{dmDispersion}{dmDSdata}(x, design, mean_expression = TRUE,
  common_dispersion = TRUE, genewise_dispersion = TRUE,
  disp_adjust = TRUE, disp_subset = 0.1, disp_interval = c(0, 1e+05),
  disp_tol = 10, disp_init = 100, disp_grid_length = 21,
  disp_grid_range = c(-10, 10), disp_moderation = "trended",
  disp_prior_df = 0, disp_span = 0.1, one_way = TRUE,
  prop_mode = "constrOptim", prop_tol = 1e-12, coef_mode = "optim",
  coef_tol = 1e-12, verbose = 0, BPPARAM = BiocParallel::SerialParam())

\S4method{dmDispersion}{dmSQTLdata}(x, mean_expression = TRUE,
  common_dispersion = TRUE, genewise_dispersion = TRUE,
  disp_adjust = TRUE, disp_subset = 0.1, disp_interval = c(0, 1e+05),
  disp_tol = 10, disp_init = 100, disp_grid_length = 21,
  disp_grid_range = c(-10, 10), disp_moderation = "none",
  disp_prior_df = 0, disp_span = 0.1, one_way = TRUE, speed = TRUE,
  prop_mode = "constrOptim", prop_tol = 1e-12, coef_mode = "optim",
  coef_tol = 1e-12, verbose = 0, BPPARAM = BiocParallel::SerialParam())
}
\arguments{
\item{x}{\code{\linkS4class{dmDSdata}} or \code{\linkS4class{dmSQTLdata}} 
object.}

\item{...}{Other parameters that can be defined by methods using this 
generic.}

\item{design}{Numeric matrix definig the model that should be used when 
estimating dispersion. Normally this should be a full model design used 
also in \code{\link{dmFit}}.}

\item{mean_expression}{Logical. Whether to estimate the mean expression of 
genes.}

\item{common_dispersion}{Logical. Whether to estimate the common dispersion.}

\item{genewise_dispersion}{Logical. Whether to estimate the gene-wise 
dispersion.}

\item{disp_adjust}{Logical. Whether to use the Cox-Reid adjusted or 
non-adjusted profile likelihood.}

\item{disp_subset}{Value from 0 to 1 defining the percentage of genes used in
common dispersion estimation. The default is 0.1, which uses 10% of 
randomly selected genes to speed up the dispersion estimation process. Use 
\code{set.seed} function to make the analysis reproducible. See Examples.}

\item{disp_interval}{Numeric vector of length 2 defining the interval of 
possible values for the common dispersion.}

\item{disp_tol}{The desired accuracy when estimating common dispersion.}

\item{disp_init}{Initial dispersion. If \code{common_dispersion} is 
\code{TRUE}, then \code{disp_init} is overwritten by common dispersion 
estimate.}

\item{disp_grid_length}{Length of the search grid.}

\item{disp_grid_range}{Vector giving the limits of grid interval.}

\item{disp_moderation}{Dispersion moderation method. One can choose to shrink
the dispersion estimates toward the common dispersion (\code{"common"}) or 
toward the (dispersion versus mean expression) trend (\code{"trended"})}

\item{disp_prior_df}{Degree of moderation (shrinkage) in case when it can not
be calculated automaticaly (number of genes on the upper boundary of grid 
is smaller than 10). By default it is equal to 0.}

\item{disp_span}{Value from 0 to 1 defining the percentage of genes used in 
smoothing sliding window when calculating the dispersion versus mean 
expression trend.}

\item{one_way}{Logical. Should the shortcut fitting be used when the design 
corresponds to multiple group comparison. This is a similar approach as in 
\code{\link{edgeR}}. If \code{TRUE} (the default), then proportions are 
fitted per group and regression coefficients are recalculated from those 
fits.}

\item{prop_mode}{Optimization method used to estimate proportions. Possible 
value \code{"constrOptim"}.}

\item{prop_tol}{The desired accuracy when estimating proportions.}

\item{coef_mode}{Optimization method used to estimate regression 
coefficients. Possible values \code{"optim"} (the default), \code{"nlminb"}
or \code{"Rcgmin"}.}

\item{coef_tol}{The desired accuracy when estimating regression coefficients.}

\item{verbose}{Numeric. Definie the level of progress messages displayed. 0 -
no messages, 1 - main messages, 2 - message for every gene fitting.}

\item{BPPARAM}{Parallelization method used by 
\code{\link[BiocParallel]{bplapply}}.}

\item{speed}{Logical. If \code{FALSE}, dispersion is calculated per each
gene-block. Such calculation may take a long time, since there can be
hundreds of SNPs/blocks per gene. If \code{TRUE}, there will be only one
dipsersion calculated per gene and it will be assigned to all the blocks
matched with this gene.}
}
\value{
Returns a \code{\linkS4class{dmDSdispersion}} or 
  \code{\linkS4class{dmSQTLdispersion}} object.
}
\description{
Maximum likelihood estimates of the precision parameter in the 
Dirichlet-multinomial model used for the differential exon/transcript usage
or QTL analysis.
}
\details{
Normally, in the differential analysis based on RNA-seq data, such 
  as, for example, differential gene expression, dispersion (of 
  negative-binomial model) is estimated. Here, we estimate precision of the 
  Dirichlet-multinomial model as it is more convenient computationally. To 
  obtain dispersion estimates, one can use a formula: dispersion = 1 / (1 + 
  precision).

Parameters that are used in the precision (dispersion = 1 / (1 + 
  precision)) estimation start with prefix \code{disp_}. Those that are used 
  for the proportion estimation in each group when the shortcut fitting 
  \code{one_way = TRUE} can be used start with \code{prop_}, and those that 
  are used in the regression framework start with \code{coef_}.
  
  There are two optimization methods implemented within dmDispersion: 
  \code{"optimize"} for the common dispersion and \code{"grid"} for the 
  gene-wise dispersion.
  
  Only part of the dispersion parameters in dmDispersion have an influence on
  a given optimization method. Here is a list of such active parameters:
  
  \code{"optimize"}:
  
  \itemize{ \item \code{disp_interval}: passed as \code{interval}. \item 
  \code{disp_tol}: the accuracy defined as \code{tol}. }
  
  \code{"grid"}, which uses the grid approach from 
  \code{\link[edgeR]{estimateDisp}} in \code{\link{edgeR}}:
  
  \itemize{ \item \code{disp_init}, \code{disp_grid_length}, 
  \code{disp_grid_range}: parameters used to construct the search grid 
  \code{disp_init * 2^seq(from = disp_grid_range[1]}, \code{to = 
  disp_grid_range[2]}, \code{length = disp_grid_length)}. \item 
  \code{disp_moderation}: Dipsersion shrinkage is available only with 
  \code{"grid"} method. \item \code{disp_prior_df}: Used only when dispersion
  shrinkage is activated. Moderated likelihood is equal to \code{loglik + 
  disp_prior_df * moderation}. Higher \code{disp_prior_df}, more shrinkage 
  toward common or trended dispersion is applied. \item \code{disp_span}: 
  Used only when dispersion moderation toward trend is activated. }
}
\examples{
# --------------------------------------------------------------------------
# Create dmDSdata object 
# --------------------------------------------------------------------------
## Get kallisto transcript counts from the 'PasillaTranscriptExpr' package

library(PasillaTranscriptExpr)
\donttest{
data_dir  <- system.file("extdata", package = "PasillaTranscriptExpr")

## Load metadata
metadata <- read.table(file.path(data_dir, "metadata.txt"), header = TRUE, 
  as.is = TRUE)

## Load counts
counts <- read.table(file.path(data_dir, "counts.txt"), header = TRUE, 
  as.is = TRUE)

## Create a samples data frame
samples <- data.frame(sample_id = metadata$SampleName, 
  group = metadata$condition)
levels(samples$group)

## Create a dmDSdata object
d <- dmDSdata(counts = counts, samples = samples)

## Use a subset of genes, which is defined in the following file
gene_id_subset <- readLines(file.path(data_dir, "gene_id_subset.txt"))

d <- d[names(d) \%in\% gene_id_subset, ]

# --------------------------------------------------------------------------
# Differential transcript usage analysis - simple two group comparison 
# --------------------------------------------------------------------------

## Filtering
## Check what is the minimal number of replicates per condition 
table(samples(d)$group)

d <- dmFilter(d, min_samps_gene_expr = 7, min_samps_feature_expr = 3,
  min_gene_expr = 10, min_feature_expr = 10)

plotData(d)

## Create the design matrix
design <- model.matrix(~ group, data = samples(d))

## To make the analysis reproducible
set.seed(123)
## Calculate dispersion
d <- dmDispersion(d, design = design)

plotDispersion(d)

head(mean_expression(d))
common_dispersion(d)
head(genewise_dispersion(d))
}
}
\references{
McCarthy, DJ, Chen, Y, Smyth, GK (2012). Differential expression
analysis of multifactor RNA-Seq experiments with respect to biological
variation. Nucleic Acids Research 40, 4288-4297.
}
\seealso{
\code{\link{plotDispersion}} \code{\link[edgeR]{estimateDisp}}
}
\author{
Malgorzata Nowicka
}
